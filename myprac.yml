
rbac case-1:

1. create a new user user1 in kube master
2. provide  only read permission in specific namespace to this user
3. provide read permission to in all namespaces to this user
4. provide write permission to specific namespace to this user
5. provide write permission to all namespaces to this user
6. provide admin access to this user


1.
Create user CSR
openssl genrsa -out user1.key 2048
openssl req -new -key user1.key -out user1.csr

2.
openssl x509 -req -in user1.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out user1.crt -days 500

3.

cat role1.yml 
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: default
  name: pod-read-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]


---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pod-read-rolebinding
  namespace: default
subjects:
- kind: User
  name: user1
  apiGroup: ""
roleRef:
  kind: Role
  name: pod-read-role
  apiGroup: ""



4. cat user1.crt | base64 -w0

5. cat user1.key | base64 -w0

6. export KUBECONFIG=kubeconfig

7.kubectl config set-credentials user1 --client-certificate=user1.crt --client-key=user1.key

8.kubectl config set-context user1-context --cluster=kubernetes --namespace=default --user=user1

9.kubectl config set-cluster cluster1 --server=https://192.168.56.162:6443 --certificate-authority=ca.crt --embed-certs=true(optional)


Reference Links

https://discuss.kubernetes.io/t/how-to-create-user-in-kubernetes-cluster-and-give-it-access/9101/4

