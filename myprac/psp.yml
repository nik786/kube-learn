What is psp??
A Pod Security Policy is a cluster-level resource that controls security 
sensitive aspects of the pod specification.

usermod -m bob
usermod --shell /bin/bash bob

mkdir -p /home/bob/kube-config
cp /etc/kubernetes/pki/ca.* .
openssl genrsa -out bob.key 2048
openssl req -new -key bob.key -out bob.csr
openssl x509 -req -in bob.csr -CA /etc/kubernetes/pki/ca.crt -CAkey /etc/kubernetes/pki/ca.key -CAcreateserial -out bob.crt -days 500
openssl x509 -req -in bob.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out bob.crt -days 500
export KUBECONFIG=kubeconfig

kubectl config set-credentials bob --client-certificate=bob.cert --client-key=bob.key
kubectl config set-context bob-context --cluster=kubernetes --user=bob








In order to use it, the requesting user or target pod's service account must be authorized to use the policy

1. Create different namespace ?
kubectl create namespace psp

2. Create a service account ??
kubectl create serviceaccount -n psp bob


3. How to bind role to created service account??

kubectl create rolebinding -n psp bob-role --clusterrole=edit --serviceaccount=psp:test-sa



4. Create a podsecurity policy file??
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata: 
  name: test-psp-policy
spec:
  privileged: false
  seLinux:
    rule: RunAsAny
  supplementalGroups:     
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'




5. Create a pod as unprivileged user and check issue





6.

7.Execute command to check permission
kubectl auth can-i use podsecuritypolicy/test-psp-policy

8. Create role and rolebinding to user bob  ??
kubectl-admin create role psp:unprivileged \
    --verb=use \
    --resource=podsecuritypolicy \
    --resource-name=example
role "psp:unprivileged" created

kubectl-admin create rolebinding fake-user:psp:unprivileged \
    --role=psp:unprivileged \
    --serviceaccount=psp-example:fake-user
rolebinding "fake-user:psp:unprivileged" created

9. Create a pod as unprivilegeed user after role and rolebinding??
kubectl-user auth can-i use podsecuritypolicy/example



kubectl-user create -f- <<EOF
apiVersion: v1
kind: Pod
metadata:
  name:      pause
spec:
  containers:
    - name:  pause
      image: k8s.gcr.io/pause
EOF
pod "pause" created


kubectl-user create deployment pause --image=k8s.gcr.io/pause

kubectl-admin create rolebinding default:psp:unprivileged \
    --role=psp:unprivileged \
    --serviceaccount=psp-example:default
rolebinding "default:psp:unprivileged" created










10.What is Privileged Mode??
 determines if any container in a pod can enable privileged mode. By default a 
 container is not allowed to access any devices on the host, but a "privileged" 
 container is given access to all devices on the host. This allows the container 
 nearly all the same access as processes running on the host. This is useful for containers 
 that want to use linux capabilities like manipulating the network stack and accessing devices




11. What is HostPID ??
Controls whether the pod containers can share the host process ID namespace. Note that when paired with ptrace this can
be used to escalate privileges outside of the container

12. What is HostIPC??
Controls whether the pod containers can share the host IPC namespace

13.What is HostNetwork??
Controls whether the pod may use the node network namespace.

14. What is FSGroup?
MustRunAs: Requires at least one range to be specified.
MayRunAs: Requires at least one range to be specified.
RunAsAny: No default provided







  
