What is psp??
A Pod Security Policy is a cluster-level resource that controls security 
sensitive aspects of the pod specification.

usermod -m bob
usermod --shell /bin/bash bob

mkdir -p /home/bob/kube-config
cp /etc/kubernetes/pki/ca.* /home/bob/.certs

Create a private key
openssl genrsa -out bob.key 2048

Note : System user name (ex: bob) need to be given in place of cname during certificate signing request creation

Create a certificate signing reques
openssl req -new -key bob.key -out bob.csr

Sign the CSR with the Kubernetes CA. We have to use the CA cert and key which are normally in /etc/kubernetes/pki/

openssl x509 -req -in bob.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out bob.crt -days 500

mkdir .certs
bob user kubeconfig file is located in gdrive 

export KUBECONFIG=kubeconfig

Create the user inside Kubernetes

kubectl config set-credentials bob --client-certificate=bob.cert --client-key=bob.key

Create a context for the user
kubectl config set-context bob-context --cluster=kubernetes --user=bob








In order to use it, the requesting user or target pod's service account must be authorized to use the policy

1. Create different namespace ?
kubectl create namespace psp

2. Create a service account ??
kubectl create serviceaccount -n psp bob


3. How to bind role to created service account??

kubectl create rolebinding -n psp bob-role --clusterrole=edit --serviceaccount=psp:bob

kubectl create rolebinding -n namespace role-name --clusterrole=edit --serviceaccount=namespace:sa-name





4. Create a podsecurity policy file??
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata: 
  name: test-psp-policy
spec:
  privileged: false
  seLinux:
    rule: RunAsAny
  supplementalGroups:     
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny
  volumes:
  - '*'




5. Create a pod as unprivileged user and check issue





6.

7.Execute command to check permission
kubectl auth can-i use podsecuritypolicy/test-psp-policy

8. Create role and rolebinding to user bob  ??

Execute as admin

kubectl create role pod-read-role --verb=get --verb=list --verb=watch --resource=pods -n psp


kubectl create rolebinding pod-read-rolebinding --user=bob --role=pod-read-role -n psp

kubectl create rolebinding default:psp:unprivileged --role=psp:unprivileged --serviceaccount=psp:default

Create the role and rolebinding to grant bob the use verb on the test-psp-policy policy

Execute as admin

kubectl create role psp:unprivileged --verb=use --resource=podsecuritypolicy --resource-name=psp -n psp


kubectl  create rolebinding bob:psp:unprivileged --role=psp:unprivileged --serviceaccount=psp:bob -n psp



kubectl create role psp:unprivileged --verb=use --resource=podsecuritypolicy --resource-name=test-psp-policy -n psp




kubectl --as=system:serviceaccount:psp:bob -n psp




9. Create a pod as unprivilegeed user after role and rolebinding??
Execute as user 
kubectl auth can-i use podsecuritypolicy/test-psp-policy


kubectl auth can-i use test-psp-policy/test-psp-policy --as-group=system:authenticated --as=bob



Execute as user

kubectl create deployment pause --image=k8s.gcr.io/pause

Execute as admin
kubectl create rolebinding default:psp:unprivileged \
    --role=psp:unprivileged \
    --serviceaccount=psp:default










10.What is Privileged Mode??
 determines if any container in a pod can enable privileged mode. By default a 
 container is not allowed to access any devices on the host, but a "privileged" 
 container is given access to all devices on the host. This allows the container 
 nearly all the same access as processes running on the host. This is useful for containers 
 that want to use linux capabilities like manipulating the network stack and accessing devices




11. What is HostPID ??
Controls whether the pod containers can share the host process ID namespace. Note that when paired with ptrace this can
be used to escalate privileges outside of the container

12. What is HostIPC??
Controls whether the pod containers can share the host IPC namespace

13.What is HostNetwork??
Controls whether the pod may use the node network namespace.

14. What is FSGroup?
MustRunAs: Requires at least one range to be specified.
MayRunAs: Requires at least one range to be specified.
RunAsAny: No default provided



kubectl create -f- <<EOF
apiVersion: v1
kind: Pod
metadata:
  name: pause
  namespace: psp
spec:
  containers:
    - name:  pause
      image: k8s.gcr.io/pause
EOF



  
