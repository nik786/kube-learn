
1.Create a pod with two labels environment: prod and app: nginx
kubectl run tomcat --image=tomcat:8.0
2.create a pod with nodeSelector: dev

kubectl label nodes k8i dev=true
kubectl get nodes -l dev=true


apiVersion: v1
kind: Pod
metadata:
  name: tomcat
  labels:
    app: nginx
    environment: prod
spec:
  containers:
  - image: tomcat:8.0
    name: tomcat
  nodeSelector:
    dev: "true"




3.Create a pod with annotations owner: nik 

apiVersion: v1
kind: Pod
metadata:
  name: tomcat     
  annotations:
    owner: nik     
spec:
  containers:
  - image: tomcat:8.0
    name: tomcat


4.Configure deployment with PodAntiAffinity to ensure scheduler does not co-locate replicas on a single node

https://thenewstack.io/implement-node-and-pod-affinity-anti-affinity-in-kubernetes-a-practical-example/



cat ng5.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/ec2-az
                operator: In
                values:
                - ec2-us-1a
      containers:
      - image: nginx
        name: nginx

The weight field in preferredDuringSchedulingIgnoredDuringExecution is in the range 1-100.
For each node that meets all of the scheduling requirements (resource request, RequiredDuringScheduling affinity expressions, etc.),
the scheduler will compute a sum by iterating throughthe elements of this field and adding "weight" to the 
sum if the node matches the corresponding MatchExpressions. . This score is then combined with the scores of other
priority functions for the node. The node(s) with the highest total score are the most preferred.


