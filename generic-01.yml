Continuous Integration (CI): Focuses on automatically integrating code changes into a shared repository, 
running tests, and detecting issues early.
Continuous Delivery (CD): Extends CI by automating the release process, ensuring code is always 
in a deployable state


DevOps is a culture and set of practices that bridge development and operations teams 
to enhance collaboration, streamline workflows, and improve software delivery. 
It emphasizes automation, continuous integration/delivery, and infrastructure 
as code to achieve faster and more reliable releases.


Plan: Define and prioritize development goals and tasks collaboratively.
Develop: Write and integrate code using version control and continuous integration.
Build: Compile and package the application into deployable artifacts.
Test: Automate testing to ensure functionality, security, and performance.
Release: Prepare and stage the application for deployment.
Deploy: Automate the delivery of applications to production environments.
Operate: Monitor, manage, and maintain applications in production.
Monitor: Continuously track performance and gather feedback for improvement.

How to connect jenkins with kubernetes

create secret
kubectl create secret generic jenkins-token



create service account
kubectl create serviceaccount jenkins
 
Enable automountServiceAccountToken for the jenkins Service Account
kubectl patch serviceaccount jenkins -p '{"automountServiceAccountToken": true}'

Patch the jenkins-token Secret to Associate it with the jenkins Service Account
kubectl patch secret jenkins-token -p '{"metadata": {"annotations": {"kubernetes.io/service-account.name": "jenkins"}}}'


kubectl get secret jenkins-token -o yaml

copy the secret token

switch to jenkins
then switch credentials
add credentials
select secret text
then save it


install k8s plugin

Manage Jenkins - Cloud

Name: Kubernetes
KubernetesUrl: https://192.168.56.8:6443
Kubernetes namespace: default
Credentials: select the created credntials which has service account token
Use Pod Label to identify it


Other option
------------
Use kubeconfig file

kubectl config use-context
kubectl config --kubeconfig=/root/my-kube-config use-context research
kubectl config --kubeconfig=/root/my-kube-config current-context










How to connect S3 bucket in eks cluster

s3 csi driver
service account with iam role
mount utility inside of pod







