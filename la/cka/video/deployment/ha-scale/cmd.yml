[cmd]

kubectl apply -f kubeserve-deployment-readiness.yaml


[command to view rollout status]

kubectl rollout status deployment kubeserve


[command to view describe deployment]

kubectl describe deployment


[Create a ConfigMap with two keys]


kubectl create configmap appconfig --from-literal=key1=value1 --from-literal=key2=value2


[Get the YAML back out from the ConfigMap]

kubectl get configmap appconfig -o yaml


[Create the pod that is passing the ConfigMap data]

kubectl apply -f configmap.yml


[Get the keys from the volume on the container]


kubectl exec configmap-volume-pod -- ls /etc/configmap


[Get the values from the volume on the pod]

kubectl exec configmap-volume-pod -- cat /etc/config/key1


[Create the pod that has attached secret data]


kubectl apply -f secret-pod.yaml


[Open a shell and echo the environment variable]


kubectl exec -it secret-pod -- sh


echo $MY_CERT



[Create the pod with volume attached with secrets]


kubectl apply -f secret-volume-pod.yaml


[Get the keys from the volume mounted to the container with the secrets]


kubectl exec secret-volume-pod -- ls /etc/certs


[Links]

scaling: https://kubernetes.io/docs/concepts/cluster-administration/manage-deployment/#scaling-your-application


kubectl scale deployment/my-nginx --replicas=1


kubectl get pods -l app=nginx


[system automatically choose the number of nginx replicas as needed]


kubectl autoscale deployment/my-nginx --min=1 --max=3


configmap: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/









secrets: https://kubernetes.io/docs/concepts/configuration/secret/




























































